version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: datasync-postgres
    environment:
      POSTGRES_DB: datasync
      POSTGRES_USER: datasync
      POSTGRES_PASSWORD: datasync123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - datasync-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U datasync"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: datasync-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - datasync-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kafka 消息队列
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: datasync-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - datasync-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: datasync-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - datasync-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  datasync-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 